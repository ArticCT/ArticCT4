local MyUILibrary = {}

-- Theme for the UI
MyUILibrary.Theme = {
    PrimaryColor = Color3.fromRGB(0, 122, 255),
    SecondaryColor = Color3.fromRGB(255, 255, 255),
    BackgroundColor = Color3.fromRGB(28, 28, 28),
    AccentColor = Color3.fromRGB(60, 60, 60),
}

-- Function to create a draggable window
function MyUILibrary.CreateWindow(title, size)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local window = Instance.new("Frame")
    window.Size = size or UDim2.new(0, 400, 0, 300)
    window.Position = UDim2.new(0.5, -200, 0.5, -150)
    window.BackgroundColor3 = MyUILibrary.Theme.BackgroundColor
    window.BorderSizePixel = 0
    window.Parent = screenGui

    local titleBar = Instance.new("TextLabel")
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = MyUILibrary.Theme.AccentColor
    titleBar.Text = title or "Window"
    titleBar.TextColor3 = MyUILibrary.Theme.SecondaryColor
    titleBar.Font = Enum.Font.SourceSansBold
    titleBar.TextSize = 20
    titleBar.Parent = window

    -- Draggable functionality
    local dragging, dragInput, dragStart, startPos
    local UserInputService = game:GetService("UserInputService")

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = window.Position
        end
    end)

    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    titleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            window.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    return window
end

-- Function to create a button
function MyUILibrary.CreateButton(parent, text, callback)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 150, 0, 50)
    button.BackgroundColor3 = MyUILibrary.Theme.PrimaryColor
    button.TextColor3 = MyUILibrary.Theme.SecondaryColor
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 18
    button.Text = text or "Button"
    button.Parent = parent

    -- Hover effect
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = MyUILibrary.Theme.AccentColor
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = MyUILibrary.Theme.PrimaryColor
    end)

    -- Button click
    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return button
end

-- Function to create a slider
function MyUILibrary.CreateSlider(parent, text, minValue, maxValue, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0, 300, 0, 50)
    sliderFrame.BackgroundTransparency = 1
    sliderFrame.Parent = parent

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0, 100, 0, 50)
    label.BackgroundTransparency = 1
    label.Text = text or "Slider"
    label.TextColor3 = MyUILibrary.Theme.SecondaryColor
    label.Font = Enum.Font.SourceSansBold
    label.TextSize = 18
    label.Parent = sliderFrame

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(0, 180, 0, 10)
    sliderBar.Position = UDim2.new(0, 120, 0.5, -5)
    sliderBar.BackgroundColor3 = MyUILibrary.Theme.AccentColor
    sliderBar.BorderSizePixel = 0
    sliderBar.Parent = sliderFrame

    local sliderHandle = Instance.new("Frame")
    sliderHandle.Size = UDim2.new(0, 20, 0, 20)
    sliderHandle.Position = UDim2.new(0, 0, 0.5, -10)
    sliderHandle.BackgroundColor3 = MyUILibrary.Theme.PrimaryColor
    sliderHandle.BorderSizePixel = 0
    sliderHandle.Parent = sliderBar

    local UserInputService = game:GetService("UserInputService")
    local dragging = false

    sliderHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    sliderHandle.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local sliderPosition = math.clamp(input.Position.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
            sliderHandle.Position = UDim2.new(0, sliderPosition, 0.5, -10)
            local value = math.floor((sliderPosition / sliderBar.AbsoluteSize.X) * (maxValue - minValue) + minValue)
            if callback then
                callback(value)
            end
        end
    end)

    return sliderFrame
end

return MyUILibrary
